services:
  app-dev:
    build: .
    command: npm run dev
    ports:
      - "${NODE_PORT:-3000}:3000"
    environment:
      - NODE_ENV=development
      - NODE_PORT=${NODE_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - /app/node_modules
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    command: >
      sh -c "
      if [ -n '${REDIS_PASSWORD}' ]; then
        redis-server --requirepass ${REDIS_PASSWORD}
      else
        redis-server
      fi
      "
    healthcheck:
      test: >
        sh -c "
        if [ -n '${REDIS_PASSWORD}' ]; then
          redis-cli -a ${REDIS_PASSWORD} ping
        else
          redis-cli ping
        fi
        "
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  docs:
    image: node:22-alpine
    working_dir: /app
    command: >
      sh -c "
      npm install -g mintlify &&
      npm install &&
      npm run docs:generate &&
      cd docs &&
      mintlify dev --port 3001
      "
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
    volumes:
      - ./docs:/app/docs
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - ./scripts:/app/scripts
    networks:
      - app-network

volumes:
  mysql_data:
  redis_data:

networks:
  app-network:
    driver: bridge
